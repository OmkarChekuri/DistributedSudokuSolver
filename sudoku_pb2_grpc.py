# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import sudoku_pb2 as sudoku__pb2


class SecureMessagingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPublicKey = channel.unary_unary(
                '/ousystems.SecureMessaging/GetPublicKey',
                request_serializer=sudoku__pb2.NullMsg.SerializeToString,
                response_deserializer=sudoku__pb2.PublicKey.FromString,
                )
        self.SendEncryptedMessage = channel.unary_unary(
                '/ousystems.SecureMessaging/SendEncryptedMessage',
                request_serializer=sudoku__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=sudoku__pb2.MsgAck.FromString,
                )
        self.GetSubMatrix = channel.unary_unary(
                '/ousystems.SecureMessaging/GetSubMatrix',
                request_serializer=sudoku__pb2.Address.SerializeToString,
                response_deserializer=sudoku__pb2.subMatrix.FromString,
                )
        self.GetRoundRobinToken = channel.unary_unary(
                '/ousystems.SecureMessaging/GetRoundRobinToken',
                request_serializer=sudoku__pb2.Address.SerializeToString,
                response_deserializer=sudoku__pb2.Token.FromString,
                )


class SecureMessagingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPublicKey(self, request, context):
        """Requests and returns the Public Key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendEncryptedMessage(self, request, context):
        """Receives an Encrypt a message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubMatrix(self, request, context):
        """Recieves a subset sudoku
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoundRobinToken(self, request, context):
        """Recieves a round robin token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SecureMessagingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPublicKey,
                    request_deserializer=sudoku__pb2.NullMsg.FromString,
                    response_serializer=sudoku__pb2.PublicKey.SerializeToString,
            ),
            'SendEncryptedMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendEncryptedMessage,
                    request_deserializer=sudoku__pb2.EncryptedMessage.FromString,
                    response_serializer=sudoku__pb2.MsgAck.SerializeToString,
            ),
            'GetSubMatrix': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubMatrix,
                    request_deserializer=sudoku__pb2.Address.FromString,
                    response_serializer=sudoku__pb2.subMatrix.SerializeToString,
            ),
            'GetRoundRobinToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoundRobinToken,
                    request_deserializer=sudoku__pb2.Address.FromString,
                    response_serializer=sudoku__pb2.Token.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ousystems.SecureMessaging', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SecureMessaging(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ousystems.SecureMessaging/GetPublicKey',
            sudoku__pb2.NullMsg.SerializeToString,
            sudoku__pb2.PublicKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendEncryptedMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ousystems.SecureMessaging/SendEncryptedMessage',
            sudoku__pb2.EncryptedMessage.SerializeToString,
            sudoku__pb2.MsgAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubMatrix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ousystems.SecureMessaging/GetSubMatrix',
            sudoku__pb2.Address.SerializeToString,
            sudoku__pb2.subMatrix.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoundRobinToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ousystems.SecureMessaging/GetRoundRobinToken',
            sudoku__pb2.Address.SerializeToString,
            sudoku__pb2.Token.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
